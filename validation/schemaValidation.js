import Joi from 'joi';

const schemaValidation = Joi.object({
    SegmentCode: Joi.string().allow(null, ''),
    SegmentTitle: Joi.string().allow(null, ''),
    SegmentDefinition: Joi.string().allow(null, ''),
    FamilyCode: Joi.string().allow(null, ''),
    FamilyTitle: Joi.string().allow(null, ''),
    FamilyDefinition: Joi.string().allow(null, ''),
    ClassCode: Joi.string().allow(null, ''),
    ClassTitle: Joi.string().allow(null, ''),
    ClassDefinition: Joi.string().allow(null, ''),
    BrickCode: Joi.string().allow(null, ''),
    BrickTitle: Joi.string().allow(null, ''),
    BrickDefinition_Includes: Joi.string().allow(null, ''),
    BrickDefinition_Excludes: Joi.string().allow(null, ''),
    AttributeCode: Joi.string().allow(null, ''),
    AttributeTitle: Joi.string().allow(null, ''),
    AttributeDefinition: Joi.string().allow(null, ''),
    AttributeValueCode: Joi.string().allow(null, ''),
    AttributeValueTitle: Joi.string().allow(null, ''),
    AttributeValueDefinition: Joi.string().allow(null, ''),
    BrickAttributeTitleEmbedding: Joi.alternatives().try(Joi.array().items(Joi.number()), Joi.string()).allow(null),
    // You can define the rules for createdAt and updatedAt based on how you handle them in your application
    // They are typically auto-generated by the ORM so they may not require validation here
}).options({ allowUnknown: true }); // allowUnknown option is to ignore unexpected fields

export default schemaValidation;
